// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  notes         Note[]
  sharedNotes   SharedNote[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  tokenHash String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Note {
  id         String       @id @default(uuid())
  title      String
  content    String
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  sharedWith SharedNote[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

enum SharedPermission {
  VIEW
  EDIT
}

model SharedNote {
  id         String           @id @default(uuid())
  noteId     String
  userId     String
  permission SharedPermission
  grantedBy  String?
  expiresAt  DateTime?
  revokedAt  DateTime?
  createdAt  DateTime         @default(now())

  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([noteId, userId])
  @@index([userId])
  @@index([noteId])
}
