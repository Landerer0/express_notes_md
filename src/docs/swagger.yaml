openapi: 3.0.0
info:
  title: Markdown Notes API
  version: 1.0.0
  description: API para gestionar notas en formato Markdown
servers:
  - url: http://localhost:3000
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
        "400":
          description: User already exists
        "500":
          description: Internal server error

  /api/auth/login:
    post:
      summary: Log in a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: User successfully logged in
          headers:
            Set-Cookie:
              description: JWT token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
        "401":
          description: Unauthorized - invalid credentials

  /api/auth/logout:
    post:
      summary: Log out the current user
      tags:
        - Auth
      responses:
        "200":
          description: User successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/verify-session:
    get:
      summary: Verify user session
      tags:
        - Auth
      responses:
        "200":
          description: Valid session
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: string
        "401":
          description: Unauthorized - invalid or missing token

  /api/notes:
    get:
      summary: Obtener todas las notas del usuario
      tags: [Notes]
      responses:
        "200":
          description: Lista de notas
    post:
      summary: Crear una nueva nota
      tags: [Notes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        "201":
          description: Nota creada

  /api/notes/{noteId}:
    get:
      summary: Obtener una nota por ID
      tags: [Notes]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Nota encontrada
        "404":
          description: Nota no encontrada
    put:
      summary: Actualizar una nota
      tags: [Notes]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: Nota actualizada
        "404":
          description: Nota no encontrada
    delete:
      summary: Eliminar una nota
      tags: [Notes]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Nota eliminada
        "404":
          description: Nota no encontrada

  /api/notes/{noteId}/share:
    post:
      summary: Share a note with another user
      tags:
        - Notes
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
          description: ID of the note to share
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - permission
              properties:
                userId:
                  type: string
                  description: ID of the user to share the note with
                permission:
                  type: string
                  enum: [VIEW, EDIT]
                  description: Permission level for the user
                expiresAt:
                  type: string
                  format: date-time
                  description: Expiration date for the share (optional)
      responses:
        "201":
          description: Note shared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  result:
                    $ref: "#/components/schemas/Note"
        "400":
          description: Missing or invalid parameters
        "401":
          description: Unauthorized
        "404":
          description: Note not found

  /api/notes/{noteId}/share/revoke:
    post:
      summary: Revoke a user's access to a shared note
      tags:
        - Notes
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
          description: ID of the shared note to revoke
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: ID of the user whose access will be revoked
      responses:
        "200":
          description: Revoked access to note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Missing parameters
        "404":
          description: Shared note not found

  /api/notes/shared:
    get:
      summary: Get notes shared with the authenticated user
      tags:
        - Notes
      responses:
        "200":
          description: List of notes shared with the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Note"
        "401":
          description: Unauthorized

  /api/notes/pdf/titles:
    get:
      summary: Generar un PDF con los títulos de todas las notas
      tags: [Notes]
      parameters:
        - in: query
          name: filename
          schema:
            type: string
          required: false
          description: Nombre opcional del archivo PDF
      responses:
        "200":
          description: PDF generado exitosamente
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /api/utils/check-grammar:
    post:
      summary: Verificar la gramática del contenido Markdown
      tags: [Utils]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                language:
                  type: string
                  description: Idioma del contenido (por ejemplo 'Spanish' o 'English')
      responses:
        "200":
          description: Resultados de la verificación gramatical

  /api/utils/render-markdown-html:
    post:
      summary: Renderizar contenido Markdown a HTML
      tags: [Utils]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - markdown
              properties:
                content:
                  type: string
      responses:
        "200":
          description: Contenido renderizado en HTML
